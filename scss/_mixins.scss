@mixin bpMax ($maxWidth){
  /*apply rules up the max width, then stop applying them*/
  @media only screen and (max-width: $maxWidth){
    @content;
  }
}
@mixin bpMin ($minWidth){
  /*apply rules up the max width, then stop applying them*/
  @media only screen and (min-width: $minWidth){
    @content;
  }
}
@mixin makeCols (){
  @for $i from 1 to 12{
    .column-#{$i}{
      width: (100% / $gridCols) * $i;
      // @extend .container; not letting me DRY up code here
    }
  }
}
@mixin outputColorNames(){
  @each $colorType, $colorValue in $colorNames{
    .top-colors .row .color-#{$colorType}:before{
      content: "#{$colorType}";
      text-transform: capitalize;
    }
  }
}
@mixin outputColors(){
  @each $colorType, $colorValue in $colors{
    .top-colors .color-#{$colorType} > .color-box{
      content: "#{$colorType}";
      background-color: $colorValue;
    }
  }
}

// .color-primary .color-primary

//name color-primary rgb hsl after color name, rgb, hsl
//color-primary > color-primary-mix
@mixin mixColors(){
  %floatRight{
    display: inline-block;
    float: right;
  }
  @each $colorTitle, $color in $colors{
    @each $scolorTitle, $scolor in $colors{
      .color-#{$colorTitle} .color-#{$scolorTitle}-mix{
        background-color: mix($color, $scolor, $mixAmount);
      }
      .color-#{$colorTitle} .name:after{
        content: "#{map-get($colorNames, $colorTitle)}";
        @extend %floatRight;
      }
      .color-#{$colorTitle} .hsl:after{
        content: "#{round(hue($color))}/#{round(saturation($color))}/#{round(lightness($color))}";
        @extend %floatRight;
      }
      .color-#{$colorTitle} .rgb:after{
        content: "#{$color}";
        @extend %floatRight;
      }
    }
  }
}

@mixin tintColors(){
  @each $ct, $cl in $colors{
    .color-#{$ct} .color-#{$ct}{
      background-color: $cl;
      float: left;
      width: 30%;
    }
    .color-#{$ct} .color-#{$ct}-light{
      background-color: lighten($cl, $tintAmount);
      float: left;
      width: 30%;

    }
    .color-#{$ct} .color-#{$ct}-dark{
      background-color: darken($cl, $tintAmount);
      float: left;
      width: 30%;

    }

  }
}
// @each $colorTitle, $color in $colors{
//   .color-#{$colorTitle} .color-#{$colorTitle}{
//     background-color: $color;
//   }
// }
